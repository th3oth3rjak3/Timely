<EditForm Model="@NewItemForm" OnValidSubmit="AddNewTodoItem">
    <MudDialog ContentStyle="min-width: 400px;">
        <DialogContent>
            <DataAnnotationsValidator />
            <MudTextField @bind-Value="NewItemForm.Description" Label="Description" For="@(() => NewItemForm.Description)" />
        </DialogContent>
        <DialogActions>
            <MudStack Row="true" Spacing="4">
                <MudButton ButtonType="ButtonType.Button" OnClick="() => MudDialog.Cancel()">Cancel</MudButton>
                <MudButton ButtonType="ButtonType.Submit" Color="Color.Primary" Variant="Variant.Filled">Add</MudButton>
            </MudStack>
        </DialogActions>
    </MudDialog>
</EditForm>

@code {

    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; } = default!;

    /// <summary>
    /// The form to contain the new todo item after successful input.
    /// </summary>
    private NewTodoItemForm NewItemForm { get; set; } = new();

    private class NewTodoItemForm
    {
        [Required(ErrorMessage = "Description is required")]
        [StringLength(100, ErrorMessage = "Maximum length is 100")]
        public string? Description { get; set; } = null;
    }

    private void AddNewTodoItem()
    {
        if (NewItemForm.Description is null) return;

        var newItem = new TodoItem(NewItemForm.Description);
        MudDialog.Close(DialogResult.Ok(newItem));
    }
}
